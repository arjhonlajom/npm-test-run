# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# ESLint is a tool for identifying and reporting on patterns
# found in ECMAScript/JavaScript code.
# More details at https://github.com/eslint/eslint
# and https://eslint.org

name: ESLint Scan

on:
  push:
    branches: [ "main", "dev","qa","staging", "uat" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main", "dev","qa","staging", "uat" ]

permissions:
  actions: write
  
jobs:
  node_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      - name: Install Node Dependencies
        run: |
          npm install
          npm install obtain-github-app-installation-access-token@1.1.0
          npm ci
        env:
          CI: TRUE
      - name: Test Code Linting
        run: npx eslint 
      - name: Save Code Linting Report JSON
        # npm script for ESLint
        # See https://eslint.org/docs/user-guide/command-line-interface#options
        # npx eslint --output-file eslint_report.json --format json .
        run: |
          npx eslint . --output-file eslint_report.json --format json 
        # Continue to the next step even if this fails
        continue-on-error: true


      - name: Obtain GitHub App Installation Access Token
        id: githubAppAuth
        run: |
          TOKEN="$(npx obtain-github-app-installation-access-token ci ${{ secrets.GH_APP_CREDENTIALS_TOKEN }})"
          echo "::add-mask::$TOKEN"
          echo "::set-output name=token::$TOKEN"
      - name: Use the obtained token
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d '{"context":"test","state":"success"}' \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/statuses/$GITHUB_SHA?access_token=$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ steps.githubAppAuth.outputs.token }}


      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.GH_CLASSIC_TOKEN }}"
          report-json: "eslint_report.json"
          
      # OPTIONAL: save a copy of the usage report for download or use in another job
      - name: Upload ESLint report
        uses: actions/upload-artifact@v3
        with:
          name: eslint_report.json
          path: eslint_report.json
          retention-days: 5